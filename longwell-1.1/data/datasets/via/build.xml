<project name="via" default="data">

	<!--+
	    | Contract
	    |
	    |      call the "data" target with the following properties set:
	    |              base is the location of this dataset package relative to the main build.xml file
	    |              stylesheets is where the common stylesheets are located
	    |              classpath is a href for a classpath that contains Saxon
	    |       
	    |  assumes all directories already exist
	    +-->
	
	<description>
      Manages the Harvard VIA metadata 
	</description>

	<property name="data.flavor" value="-demo"/>

	<target name="prepare">
      <if>
      	<not><available file="${base}/data/via${data.flavor}.zip"/></not>
        <then>
         <mkdir dir="${base}/data/"/>        
		 <get src="http://simile.mit.edu/repository/datasets/via/data/via${data.flavor}.zip" 
             dest="${base}/data/via${data.flavor}.zip" 
             verbose="true"
             usetimestamp="true"
	      />
       	</then>
      </if>		
	  <unzip src="${base}/data/via${data.flavor}.zip" dest="${base}/data/" overwrite="false"/>
	</target>

    <target name="data" depends="prepare">
      <if>
        <and>
          <uptodate targetfile="${base}/data/via.rdf" srcfile="${base}/data/harvard-via.xml"/>
          <uptodate targetfile="${base}/data/via.rdf" srcfile="${base}/stylesheets/via.xsl"/>
          <uptodate targetfile="${base}/data/via.rdf" srcfile="${stylesheets}/common.xsl"/>
        </and>
        <then>
          <echo message="via.rdf is up-to-date"/>
        </then>
        <else>
          <echo message="Processing via.rdf"/>
          <java classname="net.sf.saxon.Transform" classpathref="classpath">
          	<arg line="-o ${base}/data/via.rdf ${base}/data/harvard-via.xml ${base}/stylesheets/via.xsl"/>
          </java>
          <echo message="Validating via.rdf"/>
          <java classname="jena.rdfparse" classpathref="classpath">
             <arg line="-stn ${base}/data/via.rdf"/>
          </java>
        </else>
      </if>
    </target>   

	<target name="copy-data">
	    <copy todir="${data.dest}">
	      <fileset dir="${base}/data">
	        <include name="*.rdf"/>
	      </fileset>
	    </copy>
	</target>
	
	<target name="clean">
	  	  <delete quiet="true">
	        <fileset dir="${base}/data">
	          <include name="*.xml"/>
	          <include name="*.rdf"/>
	        </fileset>
	      </delete>
	</target>	
			
</project>
